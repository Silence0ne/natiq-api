services:
  postgres-db:
    image: public.ecr.aws/docker/library/postgres:14.15-alpine3.21
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  natiq-api:
    image: natiqquran/nq-api:latest
    container_name: natiq-api
    ports:
      - "8001:80"
    depends_on:
      - postgres-db
      - forced-alignment
      - rabbitmq
    volumes:
      - static:/app/staticfiles
    environment: &default_env
      SECRET_KEY: bruh
      DEBUG: 1
      DJANGO_LOGLEVEL: info
      DJANGO_ALLOWED_HOSTS: localhost
      DJANGO_CORS_ALLOWED_ORIGINS: "*"
      DJANGO_CORS_ALLOWED_ALL_ORIGINS: 1
      CSRF_TRUSTED_ORIGINS: http://localhost:8001
      DATABASE_NAME: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_HOST: postgres-db
      DATABASE_PORT: 5432
      FORCED_ALIGNMENT_API_URL: http://forced-alignment:5000
      FORCED_ALIGNMENT_SECRET_KEY: bruh
      CELERY_BROKER_URL: rabbitmq

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/static:ro
    depends_on:
      - natiq-api
  forced-alignment:
    image: natiqquran/forced-alignment
    container_name: forced-alignment
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: nq-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  celery:
    restart: always
    image: natiqquran/nq-api:latest
    entrypoint: celery
    command: -A api worker -l info
    environment: *default_env
    depends_on:
      - postgres-db
      - rabbitmq
      - natiq-api
volumes:
  postgres_data:
  static:
  rabbitmq_data:
