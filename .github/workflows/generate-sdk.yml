name: Generate and Publish SDK

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  generate-schema:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_NAME: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: "5432"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres and run migrations
        run: |
          until pg_isready -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USERNAME"; do
            echo "Waiting for Postgres..."; sleep 2;
          done
          python manage.py migrate

      - name: Generate OpenAPI schema
        run: |
          python manage.py spectacular --file sdk/schema.yaml

      - name: Commit updated schema
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="${GITHUB_REF_NAME}"
          git add sdk/schema.yaml
          git commit -m "chore: update OpenAPI schema [skip ci]" || echo "No changes to commit"
          git push origin HEAD:"$BRANCH_NAME"

  publish:
    runs-on: ubuntu-latest
    needs: generate-schema
    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js and npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          cd sdk/typescript
          npm ci

      # 4. Generate TypeScript SDK from schema
      - name: Generate SDK
        run: |
          cd sdk/typescript
          npm run generate

      # 5. Build the package (compile TS â†’ JS + .d.ts)
      - name: Build SDK
        run: |
          cd sdk/typescript
          npm run build

      # 6. Bump the package version
      - name: Bump SDK version
        run: |
          cd sdk/typescript
          npm version patch -m "chore(release): %s [skip ci]"

      # 7. Commit version bump
      - name: Commit version bump
        run: |
          cd sdk/typescript
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="${GITHUB_REF_NAME}"
          git add package.json package-lock.json
          git commit -m "chore: bump SDK version" || echo "No changes to commit"
          git push origin HEAD:"$BRANCH_NAME" --follow-tags

      # 8. Publish to npm
      - name: Publish SDK to npm
        run: |
          cd sdk/typescript
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_NTQ_ACCESS_TOKEN }}
